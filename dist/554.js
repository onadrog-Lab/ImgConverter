(self.webpackChunkphoto_script=self.webpackChunkphoto_script||[]).push([[554],{554:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{modifier:()=>modifier});const modifier=file=>{const reader=new FileReader,canvas=document.getElementById("imgSrc"),ctx=canvas.getContext("2d"),lightRange=document.getElementById("light"),satRange=document.getElementById("sat"),hueRange=document.getElementById("hue"),image=new Image,filterInput=document.getElementsByName("filter"),w=canvas.width,h=canvas.height,Sepia=document.getElementById("Sepia"),Invert=document.getElementById("Invert"),Default=document.getElementById("Default"),restHsl=document.getElementById("resetHSL"),grid=document.querySelector("#form-grid"),computeredStyle=window.getComputedStyle(grid);reader.onloadend=e=>{const a=[...computeredStyle.getPropertyValue("grid-template-columns").split(" ").slice(-5)],t=[...computeredStyle.getPropertyValue("grid-template-rows").split(" ").slice(-2)],n=a.reduce(((e,a)=>parseInt(e,10)+parseInt(a,10))),s=t.reduce(((e,a)=>parseInt(e,10)+parseInt(a,10)));image.src=e.target.result,image.onload=()=>{canvas.width=image.naturalWidth,canvas.height=image.naturalHeight,canvas.style.maxWidth=n+"px",canvas.style.maxHeight=s+"px",sessionStorage.setItem("nw",image.naturalWidth),sessionStorage.setItem("nh",image.naturalHeight),ctx.globalCompositeOperation="source-over",ctx.drawImage(image,0,0)}},reader.readAsDataURL(file);let over=!1,scale=1,isDown=!1,last={x:0,y:0},startCoords={x:0,y:0},spaceDown=!1;const canvasOver=()=>{canvas.tabIndex=-1,canvas.focus();const handleKeyDown=e=>{"Space"===e.code&&(e.preventDefault(),spaceDown=!0)},handleKeyUp=e=>{"Space"===e.code&&(spaceDown=!1)};spaceDown&&(console.log(eval(spaceDown)),canvas.onmousedown=e=>{spaceDown&&(isDown=!0,startCoords={x:e.clientX-canvas.offsetLeft-last.x,y:e.clientY-canvas.offsetTop-last.y})},canvas.onmousemove=e=>{if(spaceDown){let a=e.clientX-canvas.offsetLeft,t=e.clientY-canvas.offsetTop;isDown&&(canvas.style.transform=`matrix(${scale}, 0,0,${scale}, ${a-startCoords.x}, ${t-startCoords.y})`)}},canvas.onmouseup=function(e){isDown=!1,last={x:e.clientX-canvas.offsetLeft-startCoords.x,y:e.clientY-canvas.offsetTop-startCoords.y}}),canvas.onkeyup=handleKeyUp,canvas.onkeydown=handleKeyDown,canvas.onwheel=e=>{e.preventDefault(),e.deltaY<0?scale*=-.2*e.deltaY:scale/=.2*e.deltaY,canvas.style.transform=`matrix(${scale}, 0,0,${scale}, ${xVal-startCoords.x}, ${yVal-startCoords.y})`},over?requestAnimationFrame(canvasOver):cancelAnimationFrame(canvasOver)};canvas.onmouseover=()=>{over=!0,canvasOver()},canvas.onmouseout=()=>(over=!1,isDown=!1);const render=()=>{let e=+satRange.value,a=+hueRange.value,t=+lightRange.value,n=Sepia.checked?100:0,s=Invert.checked?100:0;ctx.filter=`saturate(${e}%) brightness(${t}%) hue-rotate(${a}deg) invert(${s}%) sepia(${n}%)`,ctx.drawImage(image,0,0)},reset=()=>{lightRange.value=100,satRange.value=100,hueRange.value=0,render()};restHsl.onclick=reset,hueRange.oninput=satRange.oninput=lightRange.oninput=Sepia.oninput=Invert.oninput=Default.oninput=render}}}]);